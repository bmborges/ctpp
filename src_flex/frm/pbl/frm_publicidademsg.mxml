<?xml version="1.0" encoding="utf-8"?>
<MDIWindow xmlns="flexmdi.containers.*" xmlns:mx="http://www.adobe.com/2006/mxml" 
		   width="932" height="476" title="Cadastro Mensagem Publicidade" creationComplete="init()"
		   xmlns:s="library://ns.adobe.com/flex/spark" xmlns:skins="skins.*" creationPolicy="all">
	<mx:Script>
		<![CDATA[
			import classes.Util;
			import classes.UtilMensagens;
			import classes.UtilNamesPesquisa;
			import classes.UtilRetornoBanco;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Button;
			import mx.controls.Text;
			import mx.controls.TextArea;
			import mx.core.FlexGlobals;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import service.pbl.Pbl_PublicMsgService;
			
			import vo.adm.SystemVO;
			import vo.pbl.Pbl_PublicMsgVO;
			
			
			private var ro_msg:Pbl_PublicMsgService = Pbl_PublicMsgService.getInstance();
			
			
			private var systemvo:SystemVO = SystemVO.getInstance();
			private var pbl_msgVO:Pbl_PublicMsgVO;
			
			private var util:Util = new Util();
			private var retorno:UtilRetornoBanco;
			[Bindable] private var isValid:Boolean = false;
			
			private var file:FileReference;
			private var TipoArquivo:String;
			private var myarray:Array;
			private var NewImg:Image;
			private var timer:Timer;
			
			protected function lb_msg(item:Object, column:DataGridColumn):String
			{
				var msg:String = item.msg;
				
				return msg.substr(0,50)+"..."; 
			}
			
			protected function tabnav_changeHandler(e:IndexChangedEvent):void
			{
				var Index:int=e.newIndex;
				initButtons();
				if (Index == 0) {
				} else if (Index == 1){
					if (dg_mensagem.selectedItem){
						this.enabled = false;
						pbl_msgVO = new Pbl_PublicMsgVO;
						pbl_msgVO.id_publicmsg = dg_mensagem.selectedItem.id_publicmsg;
						ro_msg.SelectImg(pbl_msgVO,SelectImgResult,defaultFaultHandler);
					}
				} else if (Index == 2){
				}
				
			}
			private function SelectImgResult(e:ResultEvent):void{
				this.enabled = true;
				if (tb_nav.selectedIndex == 0){
				} else if (tb_nav.selectedIndex == 1){
					image1.data = e.result[0].img;
				} else if (tb_nav.selectedIndex == 2){
				}
			}
			private function init():void{
				initButtons();
				this.width = FlexGlobals.topLevelApplication.mdiCanvas.width;
				this.height = FlexGlobals.topLevelApplication.mdiCanvas.height;
				
				this.x = 0;
				this.y = 0;

				ctrlbar.bt_pesquisar.addEventListener(MouseEvent.CLICK,selecionar);
				ctrlbar.bt_inserir.addEventListener(MouseEvent.CLICK,inserir);
				ctrlbar.bt_alterar.addEventListener(MouseEvent.CLICK,alterar);
				ctrlbar.bt_excluir.addEventListener(MouseEvent.CLICK,deletar);
				ctrlbar.bt_limpar.addEventListener(MouseEvent.CLICK,limpar);
				bt_impimg.addEventListener(MouseEvent.CLICK,importaImg);
				
//				timer = new Timer(1000,1);
//				timer.addEventListener(TimerEvent.TIMER,applyEffects);

				
			}
			private function initButtons():void{
				ctrlbar.removeAllChildren();
				if (tb_nav.selectedIndex == 0){
					ctrlbar.addChildAt(ctrlbar.bt_pesquisar,0);
					ctrlbar.addChildAt(ctrlbar.bt_limpar,1);
				} else if (tb_nav.selectedIndex == 1){
					ctrlbar.addChildAt(ctrlbar.bt_inserir,0);
					ctrlbar.addChildAt(ctrlbar.bt_alterar,1);
					ctrlbar.addChildAt(ctrlbar.bt_excluir,2);
					ctrlbar.addChildAt(ctrlbar.bt_limpar,3);
				} else if (tb_nav.selectedIndex == 2){
					ctrlbar.addChildAt(ctrlbar.bt_pesquisar,0);
					ctrlbar.addChildAt(ctrlbar.bt_inserir,1);
					ctrlbar.addChildAt(ctrlbar.bt_alterar,2);
					ctrlbar.addChildAt(ctrlbar.bt_excluir,3);
					ctrlbar.addChildAt(ctrlbar.bt_limpar,4);
				}
				
			}
			private function importaImg(e:Event):void{
				this.enabled = false;
				this.file = null;	
				file = new FileReference();
				
				file.addEventListener(Event.SELECT, onSelect);
				
				var tipos:FileFilter = new FileFilter("Arquivos (*.png)","*.png");
				var tiposArray:Array = new Array(tipos);
				this.file.browse(tiposArray);
			}
			private function onSelect(event:Event):void {
				this.file.addEventListener(Event.COMPLETE,onLoadComplete);
				this.file.addEventListener(IOErrorEvent.IO_ERROR,onLoadError);
				this.file.load();
			}
			private function onLoadComplete(event:Event):void{
				this.enabled = true;
				txtimg.text = this.file.name;
				image1.data = this.file.data;
				
			}
			private function onLoadError(event:IOErrorEvent):void {
				mensagem_arquivos.text = "Erro ao ler o arquivo";
			}
			private function create_DataGrid(event:ResultEvent):void {
				this.enabled = true;
				if (tb_nav.selectedIndex == 0){
					dg_mensagem.dataProvider = event.result;
				} else if (tb_nav.selectedIndex == 1){
				} else if (tb_nav.selectedIndex == 2){
				}
			}
			private function selecionar(e:Event):void{
				this.enabled = false;
				if (tb_nav.selectedIndex == 0){
					popular();
					ro_msg.select(pbl_msgVO,create_DataGrid,defaultFaultHandler);
				} else if (tb_nav.selectedIndex == 1){
					popular();
					ro_msg.select(pbl_msgVO,create_DataGrid,defaultFaultHandler);
				} else if (tb_nav.selectedIndex == 2){
					
				}
			}
			private function inserir(e:Event):void{
				if (tb_nav.selectedIndex == 0){
				} else if (tb_nav.selectedIndex == 1){
					isValid = util.validateForm(form_msg);
					if (!isValid){
						mensagem_msg.text = UtilMensagens.PreenchaCampo;
					} else {
						this.enabled = false;
						popular();
						ro_msg.inserir(pbl_msgVO,inserirResult,defaultFaultHandler);
					}
				} else if (tb_nav.selectedIndex == 2){
					
					
				}
			}
			
			private function inserirResult(e:ResultEvent):void{
				this.enabled = true;
				if (tb_nav.selectedIndex == 0){
				} else if (tb_nav.selectedIndex == 1){
					txtid_publicmsg.text = e.result.toString();
				} else if (tb_nav.selectedIndex == 2){
				}
				selecionar(e);

			}
			
			private function alterar(e:Event):void{
				if(tb_nav.selectedIndex == 0){
				} else if (tb_nav.selectedIndex == 1){
					isValid = util.validateForm(form_msg);
					if (!isValid){
						mensagem_msg.text = UtilMensagens.PreenchaCampo;
					} else {
						this.enabled = false;
						popular();
						ro_msg.atualizar(pbl_msgVO,alterarResult,defaultFaultHandler);
					}
					
				} else if (tb_nav.selectedIndex == 2){
					
				}
			}
			private function alterarResult(e:ResultEvent):void{
				this.enabled = true;
				if(tb_nav.selectedIndex == 0){
				} else if (tb_nav.selectedIndex == 1){
					dg_mensagem.dataProvider = e.result;
				} else if (tb_nav.selectedIndex == 2){
					
				}
			}
			private function deletar(e:Event):void{
				if(tb_nav.selectedIndex == 0){
				} else if (tb_nav.selectedIndex == 1){
					isValid = util.validateForm(form_msg);
					if (!isValid){
						mensagem_msg.text = UtilMensagens.PreenchaCampo;
					} else {
						this.enabled = false;
						popular();
						ro_msg.deletar(pbl_msgVO,deletarResult,defaultFaultHandler);
					}
					
				} else if (tb_nav.selectedIndex == 2){
					
				}
			}
			private function deletarResult(e:ResultEvent):void{
				this.enabled = true;
				if(tb_nav.selectedIndex == 0){
				} else if (tb_nav.selectedIndex == 1){
					dg_mensagem.dataProvider = e.result;
					limpar(e);	
					tb_nav.selectedIndex = 0;
					selecionar(e);
				} else if (tb_nav.selectedIndex == 2){
					
				}
			}
			private function limpar(e:Event):void{
				if (tb_nav.selectedIndex == 0){
					dg_mensagem.dataProvider = null;
				} else if (tb_nav.selectedIndex == 1){
					mensagem_msg.text = "";
					util.limpar_formulario(form_msg);
					image1.data = null;
				} else if (tb_nav.selectedIndex == 2){
					mensagem_arquivos.text = "";
				}
				
			}
			private function setcampos(e:Event):void{
				if (tb_nav.selectedIndex == 0){
					tb_nav.selectedIndex = 1;
					txtid_publicmsg.text = dg_mensagem.selectedItem.id_publicmsg;
					txtmsg.text = dg_mensagem.selectedItem.msg;
				} else if (tb_nav.selectedIndex == 1){
					
				} else if (tb_nav.selectedIndex == 2){
					
				}
			}
			
			
			private function popular():void{
				if (tb_nav.selectedIndex == 0){
					pbl_msgVO = new Pbl_PublicMsgVO;
				} else if (tb_nav.selectedIndex == 1){
					pbl_msgVO = new Pbl_PublicMsgVO;
					pbl_msgVO.id_publicmsg = txtid_publicmsg.text.length <= 0 ? null : txtid_publicmsg.text;
					pbl_msgVO.msg = txtmsg.text.length <= 0 ? null : txtmsg.text;		
					pbl_msgVO.img = NewImg.data != null ? NewImg.data as ByteArray : null;
					pbl_msgVO.enviado = "N";
				} else if (tb_nav.selectedIndex == 2){
					
				}
			}
			private function defaultFaultHandler(e:FaultEvent):void{
				this.enabled = true;
				retorno = new UtilRetornoBanco;
				retorno.RetornoBanco(e);
				if (tb_nav.selectedIndex == 0){
					mensagem_msg.text = "";
				} else if (tb_nav.selectedIndex == 1){
					
				} else if (tb_nav.selectedIndex == 2){
					
				}
				
			}
			public static function getUIComponentBitmapData( target:UIComponent ):BitmapData {
				var bd:BitmapData = new BitmapData( target.width, target.height, true, 0 );
				var m:Matrix = new Matrix();
				
				bd.draw( target, m, null, null, null, true );
				return bd;
			}
			private function applyEffects():void {
				var w:int = 400;
				var ratio:Number = w / image1.width;
				var h:int = image1.height * ratio;
				
//				if (applyBlur.selected){
//					var blurXValue:Number = Math.max(1, image1.width / w) * 1.25;
//					var blurYValue:Number = Math.max(1, image1.height / h) * 1.25;
//					
//					var blurFilter:BlurFilter = new BlurFilter(blurXValue, blurYValue, int(blurQuality.selectedItem.value));
//					image1.filters = [blurFilter];
//				} else {
				image1.filters = [];
					
//				}
				var bd:BitmapData = getUIComponentBitmapData(image1);
				
				
				var rbd:BitmapData = resizeImageBD(bd, w, h);
				NewImg.source = new Bitmap(rbd, PixelSnapping.AUTO, true);
			}
			
			
			public static function resizeImageBD( bitmapData:BitmapData, width:Number, height:Number ):BitmapData {
				var newBitmapData:BitmapData	= new BitmapData( width, height, true, 0x000000 );
				var matrix:Matrix				= new Matrix();
				matrix.identity();
				matrix.createBox( width / bitmapData.width, height / bitmapData.height );
				newBitmapData.draw( bitmapData, matrix, null, null, null, true );
				return newBitmapData;
			}
			
		]]>
	</mx:Script>
	<mx:VBox width="100%" height="100%">
		<mx:TabNavigator id="tb_nav" width="100%" height="100%" change="tabnav_changeHandler(event)">
			<mx:Canvas label="Mensagem">
			<mx:VBox width="100%" height="100%">
				<mx:DataGrid width="100%" height="100%" id="dg_mensagem" itemClick="setcampos(event)" focusEnabled="false">
					<mx:columns>
						<mx:DataGridColumn headerText="Id." width="60" dataField="id_publicmsg"/>
						<mx:DataGridColumn headerText="Mensagem" dataField="msg" labelFunction="lb_msg"/>
						<mx:DataGridColumn headerText="Enviada" width="60" dataField="enviado"/>
					</mx:columns>
				</mx:DataGrid>
			</mx:VBox>
			</mx:Canvas>
			<mx:Canvas label="Criar Mensagem">
				<mx:VBox width="100%" height="100%">
					<mx:Label width="100%" id="mensagem_msg" styleName="lblerro"/>
					<mx:HBox width="100%" height="100%">
						<mx:Form id="form_msg" width="60%" height="100%" >
							<mx:FormItem label="Id.:" direction="horizontal">
								<skins:TextInput_Maiusculo id="txtid_publicmsg" editable="false"/>
							</mx:FormItem>
							<mx:FormItem label="Arquivo:" direction="horizontal">
								<skins:TextInput_Maiusculo id="txtimg"/>
								<mx:Button label="Selecionar" id="bt_impimg"/>
							</mx:FormItem>
							<mx:FormItem label="Mensagem" width="100%" height="100%">
								<!--<skins:RichHtmlText id="txtmsg"/>-->
								<mx:TextArea id="txtmsg" width="100%" height="90%"/>
							</mx:FormItem>
						</mx:Form>
					<mx:Image id="image1" maxHeight="400" maxWidth="400"/>
					</mx:HBox>
				</mx:VBox>
			</mx:Canvas>
			<mx:Canvas label="Email's">
				<mx:VBox width="100%" height="100%">
					<mx:Label width="100%" id="mensagem_arquivos" styleName="lblerro"/>
					<mx:TextArea id="txtArea" editable="false" width="100%" height="100%"/>
				</mx:VBox>
			</mx:Canvas>
		</mx:TabNavigator>
	</mx:VBox>
	<skins:CtrlBar_Buttons id="ctrlbar"/>
</MDIWindow>
